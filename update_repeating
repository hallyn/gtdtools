#!/bin/sh -u

# Copyright (C) 2009-2017 Serge Hallyn <serge@hallyn.com>

BASEDIR=$(dirname $0)
if [ -z "${BASEDIR}" -o "${BASEDIR}" = "." ]; then
	BASEDIR=$(pwd)
fi

cd "${BASEDIR}"

fmt() {
	printf "%02d" $1
}

usage() {
	echo "$0 [all]: update tickler entries"
	echo "If \"all\" is specified, update entries before today as well"
	exit 0
}

if [ $# -gt 0 ]; then
	if [ "$1" = "-h" -o "$1" = "--help" -o "$1" = "help" ]; then
		usage
	elif [ "$1" = "all" ]; then
		export TICKLER_DOALL="yes"
	fi
fi

# Tickler entries are inserted between 'XXX'.  So on each
# run, delete all such lines, but keep other (presumably
# inserted by the user) entries.
# Do the .bak dance for the old sed on macos.
for i in `seq 1 31`; do
	f=$(fmt $i)
	mv $f $f.bak
	sed -e '/^XXX.*XXX$/d' $f.bak > $f
done

month=`date +%m`
list=`cal | tail -2`
numdays=`for i in $list; do echo $i; done | tail -1`

# get the list of repeating/ files
filelist=`/bin/ls repeating/`
for f in $filelist; do
	echo reading file repeating/$f
	grep "^A " repeating/$f > nextlist
	cat nextlist | while read line; do
		./insert_entry.py $line
	done
	grep "^W " repeating/$f > nextlist
	cat nextlist | while read line; do
		./insert_entry.py $line
	done
	grep "^D " repeating/$f > nextlist
	cat nextlist | while read line; do
		./insert_entry.py $line
	done
	grep "^M " repeating/$f > nextlist
	cat nextlist | while read line; do
		./insert_entry.py $line
	done
done
rm nextlist
rm *.bak
date +%m > lastrun
